[versions]
core-ktx = "1.13.1"
lifecycle-runtime = "2.8.2"
activity-compose = "1.9.0"
compose-bom = "2023.08.00"
navigation-compose = "2.7.7"
retrofit = "2.9.0"
okhttp = "4.12.0"
okhttp-logging = "4.9.1"
serialization = "1.6.3"
coil = "2.6.0"
junit4 = "4.13.2"
androidx-junit = "1.1.5"
espresso = "3.5.1"

[libraries]
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3" }

# Networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp-logging" }

# Serialization
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Image loading
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Test
junit4 = { module = "junit:junit", version.ref = "junit4" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
compose-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }

# Debug
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

[bundles]
compose = ["compose-ui", "compose-graphics", "compose-tooling-preview", "compose-material3"]
retrofit = ["retrofit", "retrofit-gson", "okhttp", "okhttp-logging"]
testing = ["junit4", "androidx-junit", "espresso", "compose-test-junit4"]
debug = ["compose-tooling", "compose-test-manifest"]
